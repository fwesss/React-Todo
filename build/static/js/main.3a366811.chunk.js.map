{"version":3,"sources":["components/TodoComponents/Todo.jsx","components/TodoComponents/TodoList.jsx","components/TodoComponents/TodoForm.jsx","components/TodoComponents/Search.jsx","App.jsx","index.jsx"],"names":["List","styled","listStyle","paddingLeft","Todo","handleClick","e","preventDefault","props","markComplete","todoItem","id","this","as","appearance","onClick","style","completed","textDecoration","task","React","Component","TodoList","todoList","length","filter","queried","map","queriedItem","key","FormButton","Button","margin","TodoForm","handleChange","setState","value","target","handleSubmit","state","addTodo","handleClearComplete","clearComplete","onSubmit","name","label","required","onChange","primary","type","secondary","Search","prevProps","prevState","search","searchIcon","hideLabel","input","TextInput","iconEnd","App","Date","now","query","includes","localStorage","getItem","JSON","parse","setItem","stringify","direction","alignItems","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a366811.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'mineral-ui/Text';\nimport styled from '@emotion/styled';\n\nconst List = styled('ul')({\n  listStyle: 'none',\n  paddingLeft: 0,\n});\n\nclass Todo extends React.Component {\n  handleClick = (e) => {\n    e.preventDefault();\n    const { markComplete, todoItem } = this.props;\n    markComplete(todoItem.id);\n  };\n\n  render() {\n    const { todoItem } = this.props;\n    return (\n      <List>\n        <Text\n          as=\"li\"\n          appearance=\"h3\"\n          onClick={this.handleClick}\n          style={todoItem.completed ? { textDecoration: 'line-through' } : { textDecoration: 'none' }}\n        >\n          {todoItem.task}\n        </Text>\n      </List>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todoItem: PropTypes.shape({\n    task: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  markComplete: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'mineral-ui/Text';\n\nimport Todo from './Todo';\n\nconst TodoList = ({ todoList, markComplete }) => (\n  todoList.length > 0 ? (\n    todoList\n      .filter((todoItem) => (\n        todoItem.queried === true\n      ))\n      .map((queriedItem) => (\n        <Todo\n          key={queriedItem.id}\n          todoItem={queriedItem}\n          markComplete={markComplete}\n        />\n      ))) : <Text as=\"p\" appearance=\"h3\">No tasks</Text>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      task: PropTypes.string,\n      id: PropTypes.number,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  markComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport FormField from 'mineral-ui/Form/FormField';\nimport TextInput from 'mineral-ui/TextInput';\nimport Button from 'mineral-ui/Button';\nimport Box from 'mineral-ui/Box';\n\nconst FormButton = styled(Button)({\n  margin: '1em',\n});\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { props, state } = this;\n    props.addTodo(state.value);\n    this.setState({\n      value: '',\n    });\n  };\n\n  handleClearComplete = (e) => {\n    e.preventDefault();\n    const { clearComplete } = this.props;\n    clearComplete();\n  };\n\n  render() {\n    const { state } = this;\n    return (\n      <Box as=\"form\" onSubmit={this.handleSubmit}>\n        <FormField name=\"task\" label=\"Task\" required>\n          <TextInput onChange={this.handleChange} value={state.value} />\n        </FormField>\n        <FormButton primary type=\"submit\">Add Todo</FormButton>\n        <FormButton secondary type=\"submit\" onClick={this.handleClearComplete}>Clear Completed</FormButton>\n      </Box>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  clearComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormField from 'mineral-ui/Form/FormField';\nimport TextInput from 'mineral-ui/TextInput';\nimport IconSearch from 'mineral-ui-icons/IconSearch';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { search } = this.props;\n    const { value } = this.state;\n\n    if (prevState.value !== value) {\n      search(value);\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n    const searchIcon = <IconSearch />;\n\n    return (\n      <FormField\n        name=\"search\"\n        label=\"Search\"\n        hideLabel\n        value={value}\n        input={TextInput}\n        onChange={this.handleChange}\n        iconEnd={searchIcon}\n      />\n    );\n  }\n}\n\nSearch.propTypes = {\n  search: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import React, { StrictMode } from 'react';\nimport { Flex } from 'mineral-ui';\n\nimport TodoList from './components/TodoComponents/TodoList';\nimport TodoForm from './components/TodoComponents/TodoForm';\nimport Search from './components/TodoComponents/Search';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('todoList')) {\n      this.setState({\n        todoList: JSON.parse(localStorage.getItem('todoList')),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const { todoList } = this.state;\n    localStorage.setItem('todoList', JSON.stringify(todoList));\n  }\n\n  addTodo = (task) => {\n    const { todoList } = this.state;\n    this.setState({\n      todoList: [\n        ...todoList,\n        {\n          task,\n          id: Date.now(),\n          completed: false,\n          queried: true,\n        },\n      ],\n    });\n  };\n\n  markComplete = (id) => {\n    const { todoList } = this.state;\n    this.setState({\n      todoList: todoList.map((todoItem) => {\n        if (todoItem.id === id) {\n          return {\n            ...todoItem,\n            completed: !todoItem.completed,\n          };\n        }\n        return todoItem;\n      }),\n    });\n  };\n\n  clearComplete = () => {\n    const { todoList } = this.state;\n    this.setState({\n      todoList: todoList.filter((todoItem) => !todoItem.completed),\n    });\n  };\n\n  search = (query) => {\n    const { todoList } = this.state;\n    this.setState({\n      todoList: todoList.map((todoItem) => {\n        if (todoItem.task.includes(query)) {\n          return {\n            ...todoItem,\n            queried: true,\n          };\n        }\n        return {\n          ...todoItem,\n          queried: false,\n        };\n      }),\n    });\n  };\n\n  render() {\n    const { todoList } = this.state;\n    return (\n      <StrictMode>\n        <Flex direction=\"column\" alignItems=\"center\">\n          <h1>Todo List</h1>\n          <Search search={this.search} />\n          <TodoList todoList={todoList} markComplete={this.markComplete} />\n          <TodoForm addTodo={this.addTodo} clearComplete={this.clearComplete} />\n        </Flex>\n      </StrictMode>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { ThemeProvider } from 'mineral-ui/themes';\n\nimport App from './App';\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}